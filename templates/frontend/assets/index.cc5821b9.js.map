{"version":3,"file":"index.cc5821b9.js","sources":["../../../../ui/packages/video/src/utils.ts","../../../../ui/packages/video/src/Player.svelte","../../../../ui/packages/video/src/Video.svelte","../../../../ui/packages/video/src/StaticVideo.svelte","../../../../ui/packages/app/src/components/Video/Video.svelte","../../../../ui/packages/app/src/components/Video/index.ts"],"sourcesContent":["export const prettyBytes = (bytes: number): string => {\r\n\tlet units = [\"B\", \"KB\", \"MB\", \"GB\", \"PB\"];\r\n\tlet i = 0;\r\n\twhile (bytes > 1024) {\r\n\t\tbytes /= 1024;\r\n\t\ti++;\r\n\t}\r\n\tlet unit = units[i];\r\n\treturn bytes.toFixed(1) + \" \" + unit;\r\n};\r\n\r\nexport const playable = (): boolean => {\r\n\t// let video_element = document.createElement(\"video\");\r\n\t// let mime_type = mime.lookup(filename);\r\n\t// return video_element.canPlayType(mime_type) != \"\";\r\n\treturn true; // FIX BEFORE COMMIT - mime import causing issues\r\n};\r\n","<script lang=\"ts\">\r\n\timport { tick } from \"svelte\";\r\n\timport { Play, Pause, Maximise, Undo } from \"@gradio/icons\";\r\n\r\n\texport let src: string;\r\n\texport let caption: string | null = null;\r\n\texport let mirror: boolean;\r\n\r\n\tlet time: number = 0;\r\n\tlet duration: number;\r\n\tlet paused: boolean = true;\r\n\tlet video: HTMLVideoElement;\r\n\r\n\tlet show_controls = true;\r\n\tlet show_controls_timeout: NodeJS.Timeout;\r\n\r\n\tfunction video_move() {\r\n\t\tclearTimeout(show_controls_timeout);\r\n\t\tshow_controls_timeout = setTimeout(() => (show_controls = false), 2500);\r\n\t\tshow_controls = true;\r\n\t}\r\n\r\n\tfunction handleMove(e: TouchEvent | MouseEvent) {\r\n\t\tif (!duration) return;\r\n\r\n\t\tif (e.type === \"click\") {\r\n\t\t\thandle_click(e as MouseEvent);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (e.type !== \"touchmove\" && !((e as MouseEvent).buttons & 1)) return;\r\n\r\n\t\tconst clientX =\r\n\t\t\te.type === \"touchmove\"\r\n\t\t\t\t? (e as TouchEvent).touches[0].clientX\r\n\t\t\t\t: (e as MouseEvent).clientX;\r\n\t\tconst { left, right } = (\r\n\t\t\te.currentTarget as HTMLProgressElement\r\n\t\t).getBoundingClientRect();\r\n\t\ttime = (duration * (clientX - left)) / (right - left);\r\n\t}\r\n\r\n\tfunction play_pause() {\r\n\t\tif (paused) video.play();\r\n\t\telse video.pause();\r\n\t}\r\n\r\n\tfunction handle_click(e: MouseEvent) {\r\n\t\tconst { left, right } = (\r\n\t\t\te.currentTarget as HTMLProgressElement\r\n\t\t).getBoundingClientRect();\r\n\t\ttime = (duration * (e.clientX - left)) / (right - left);\r\n\t}\r\n\r\n\tfunction format(seconds: number) {\r\n\t\tif (isNaN(seconds) || !isFinite(seconds)) return \"...\";\r\n\r\n\t\tconst minutes = Math.floor(seconds / 60);\r\n\t\tlet _seconds: number | string = Math.floor(seconds % 60);\r\n\t\tif (seconds < 10) _seconds = `0${_seconds}`;\r\n\r\n\t\treturn `${minutes}:${_seconds}`;\r\n\t}\r\n\r\n\tasync function _load() {\r\n\t\tawait tick();\r\n\t\tvideo.currentTime = 9999;\r\n\r\n\t\tsetTimeout(async () => {\r\n\t\t\tvideo.currentTime = 0.0;\r\n\t\t}, 50);\r\n\t}\r\n\r\n\t$: src && _load();\r\n</script>\r\n\r\n<div>\r\n\t<video\r\n\t\t{src}\r\n\t\tpreload=\"auto\"\r\n\t\tcrossorigin=\"anonymous\"\r\n\t\ton:mousemove={video_move}\r\n\t\ton:click={play_pause}\r\n\t\ton:play\r\n\t\ton:pause\r\n\t\ton:ended\r\n\t\tbind:currentTime={time}\r\n\t\tbind:duration\r\n\t\tbind:paused\r\n\t\tbind:this={video}\r\n\t\tclass=\"w-full h-full object-contain bg-black\"\r\n\t\tclass:mirror\r\n\t>\r\n\t\t<track kind=\"captions\" src={caption} label=\"Subtitles\" default />\r\n\t</video>\r\n\r\n\t<div\r\n\t\tclass=\"wrap absolute bottom-0 transition duration-500  m-1.5 bg-slate-800 px-1 py-2.5 rounded-md\"\r\n\t\tstyle=\"opacity: {duration && show_controls ? 1 : 0}\"\r\n\t\ton:mousemove={video_move}\r\n\t>\r\n\t\t<div class=\"flex w-full justify-space h-full items-center px-1.5 \">\r\n\t\t\t<span\r\n\t\t\t\tclass=\" w-6 cursor-pointer text-white flex justify-center\"\r\n\t\t\t\ton:click={play_pause}\r\n\t\t\t>\r\n\t\t\t\t{#if time === duration}\r\n\t\t\t\t\t<Undo />\r\n\t\t\t\t{:else if paused}\r\n\t\t\t\t\t<Play />\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t<Pause />\r\n\t\t\t\t{/if}\r\n\t\t\t</span>\r\n\r\n\t\t\t<span class=\"font-mono shrink-0 text-xs mx-3 text-white\"\r\n\t\t\t\t>{format(time)} / {format(duration)}</span\r\n\t\t\t>\r\n\t\t\t<progress\r\n\t\t\t\tvalue={time / duration || 0}\r\n\t\t\t\ton:mousemove={handleMove}\r\n\t\t\t\ton:touchmove|preventDefault={handleMove}\r\n\t\t\t\ton:click|stopPropagation|preventDefault={handle_click}\r\n\t\t\t\tclass=\"rounded h-2 w-full mx-3\"\r\n\t\t\t/>\r\n\r\n\t\t\t<div\r\n\t\t\t\tclass=\"w-6 cursor-pointer text-white\"\r\n\t\t\t\ton:click={() => video.requestFullscreen()}\r\n\t\t\t>\r\n\t\t\t\t<Maximise />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<style lang=\"postcss\">\r\n\tspan {\r\n\t\ttext-shadow: 0 0 8px rgba(0, 0, 0, 0.5);\r\n\t}\r\n\r\n\tprogress::-webkit-progress-bar {\r\n\t\tborder-radius: 2px;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.2);\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\tprogress::-webkit-progress-value {\r\n\t\t/* border-radius: 2px; */\r\n\r\n\t\tbackground-color: rgba(255, 255, 255, 0.9);\r\n\t}\r\n\r\n\t.mirror {\r\n\t\ttransform: scaleX(-1);\r\n\t}\r\n\r\n\t.wrap {\r\n\t\twidth: calc(100% - 0.375rem * 2);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\timport { Upload, ModifyUpload } from \"@gradio/upload\";\r\n\timport type { FileData } from \"@gradio/upload\";\r\n\timport { BlockLabel } from \"@gradio/atoms\";\r\n\timport { Webcam } from \"@gradio/image\";\r\n\timport { Video } from \"@gradio/icons\";\r\n\r\n\timport { prettyBytes, playable } from \"./utils\";\r\n\timport Player from \"./Player.svelte\";\r\n\r\n\texport let value: FileData | null = null;\r\n\texport let caption: FileData | null = null;\r\n\texport let source: string;\r\n\texport let label: string | undefined = undefined;\r\n\texport let show_label: boolean;\r\n\texport let mirror_webcam: boolean;\r\n\texport let include_audio: boolean;\r\n\r\n\texport let drop_text: string = \"Drop a video file\";\r\n\texport let or_text: string = \"or\";\r\n\texport let upload_text: string = \"click to upload\";\r\n\r\n\tconst dispatch = createEventDispatcher<{\r\n\t\tchange: FileData | null;\r\n\t\tclear: undefined;\r\n\t\tplay: undefined;\r\n\t\tpause: undefined;\r\n\t\tended: undefined;\r\n\t\tdrag: boolean;\r\n\t\terror: string;\r\n\t\tupload: FileData;\r\n\t}>();\r\n\r\n\tfunction handle_load({ detail }: CustomEvent<FileData | null>) {\r\n\t\tdispatch(\"change\", detail);\r\n\t\tdispatch(\"upload\", detail!);\r\n\t\tvalue = detail;\r\n\t}\r\n\r\n\tfunction handle_clear({ detail }: CustomEvent<FileData | null>) {\r\n\t\tvalue = null;\r\n\t\tdispatch(\"change\", detail);\r\n\t\tdispatch(\"clear\");\r\n\t}\r\n\r\n\tlet dragging = false;\r\n\t$: dispatch(\"drag\", dragging);\r\n</script>\r\n\r\n<BlockLabel {show_label} Icon={Video} label={label || \"Video\"} />\r\n{#if value === null}\r\n\t{#if source === \"upload\"}\r\n\t\t<Upload\r\n\t\t\tbind:dragging\r\n\t\t\tfiletype=\"video/mp4,video/x-m4v,video/*\"\r\n\t\t\ton:load={handle_load}\r\n\t\t>\r\n\t\t\t<div class=\"flex flex-col\">\r\n\t\t\t\t{drop_text}\r\n\t\t\t\t<span class=\"text-gray-300\">- {or_text} -</span>\r\n\t\t\t\t{upload_text}\r\n\t\t\t</div>\r\n\t\t</Upload>\r\n\t{:else if source === \"webcam\"}\r\n\t\t<Webcam\r\n\t\t\t{mirror_webcam}\r\n\t\t\t{include_audio}\r\n\t\t\tmode=\"video\"\r\n\t\t\ton:error\r\n\t\t\ton:capture={({ detail }) => dispatch(\"change\", detail)}\r\n\t\t/>\r\n\t{/if}\r\n{:else if caption === null}\r\n\t<ModifyUpload on:clear={handle_clear} />\r\n\t{#if playable()}\r\n\t\t<!-- svelte-ignore a11y-media-has-caption -->\r\n\t\t<Player\r\n\t\t\tsrc={value.data}\r\n\t\t\ton:play\r\n\t\t\ton:pause\r\n\t\t\ton:ended\r\n\t\t\tmirror={mirror_webcam && source === \"webcam\"}\r\n\t\t/>\r\n\t{:else if value.size}\r\n\t\t<div class=\"file-name text-4xl p-6 break-all\">{value.name}</div>\r\n\t\t<div class=\"file-size text-2xl p-2\">\r\n\t\t\t{prettyBytes(value.size)}\r\n\t\t</div>\r\n\t{/if}\r\n{:else}\r\n\t<ModifyUpload on:clear={handle_clear} />\r\n\t{#if playable()}\r\n\t\t<!-- svelte-ignore a11y-media-has-caption -->\r\n\t\t<Player\r\n\t\t\tsrc={value.data}\r\n\t\t\tcaption={caption.data}\r\n\t\t\ton:play\r\n\t\t\ton:pause\r\n\t\t\ton:ended\r\n\t\t\tmirror={mirror_webcam && source === \"webcam\"}\r\n\t\t/>\r\n\t{:else if value.size}\r\n\t\t<div class=\"file-name text-4xl p-6 break-all\">{value.name}</div>\r\n\t\t<div class=\"file-size text-2xl p-2\">\r\n\t\t\t{prettyBytes(value.size)}\r\n\t\t</div>\r\n\t{/if}\r\n{/if}\r\n","<script lang=\"ts\">\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\timport { BlockLabel } from \"@gradio/atoms\";\r\n\timport type { FileData } from \"@gradio/upload\";\r\n\timport { Video } from \"@gradio/icons\";\r\n\r\n\timport Player from \"./Player.svelte\";\r\n\r\n\texport let value: FileData | null = null;\r\n\texport let caption: FileData | null = null;\r\n\texport let label: string | undefined = undefined;\r\n\texport let show_label: boolean;\r\n\r\n\tconst dispatch = createEventDispatcher<{\r\n\t\tchange: FileData;\r\n\t\tplay: undefined;\r\n\t\tpause: undefined;\r\n\t\tended: undefined;\r\n\t}>();\r\n\r\n\t$: value && dispatch(\"change\", value);\r\n</script>\r\n\r\n<BlockLabel {show_label} Icon={Video} label={label || \"Video\"} />\r\n{#if value === null}\r\n\t<div class=\"h-full min-h-[15rem] flex justify-center items-center\">\r\n\t\t<div class=\"h-5 dark:text-white opacity-50\"><Video /></div>\r\n\t</div>\r\n{:else if caption === null}\r\n\t<!-- svelte-ignore a11y-media-has-caption -->\r\n\t<Player src={value.data} on:play on:pause on:ended mirror={false} />\r\n{:else}\r\n\t<!-- svelte-ignore a11y-media-has-caption -->\r\n\t<Player\r\n\t\tsrc={value.data}\r\n\t\tcaption={caption.data}\r\n\t\ton:play\r\n\t\ton:pause\r\n\t\ton:ended\r\n\t\tmirror={false}\r\n\t/>\r\n{/if}\r\n","<script lang=\"ts\">\r\n\timport type { FileData } from \"@gradio/upload\";\r\n\timport { normalise_file } from \"@gradio/upload\";\r\n\timport { Block } from \"@gradio/atoms\";\r\n\timport { Video, StaticVideo } from \"@gradio/video\";\r\n\r\n\timport StatusTracker from \"../StatusTracker/StatusTracker.svelte\";\r\n\timport type { LoadingStatus } from \"../StatusTracker/types\";\r\n\timport type { Styles } from \"@gradio/utils\";\r\n\timport { _ } from \"svelte-i18n\";\r\n\r\n\texport let elem_id: string = \"\";\r\n\texport let visible: boolean = true;\r\n\texport let value: FileData | null | string = null;\r\n\texport let caption: FileData | null | string = null;\r\n\texport let label: string;\r\n\texport let source: string;\r\n\texport let root: string;\r\n\texport let root_url: null | string;\r\n\texport let show_label: boolean;\r\n\texport let loading_status: LoadingStatus;\r\n\texport let style: Styles = {};\r\n\texport let mirror_webcam: boolean;\r\n\texport let include_audio: boolean;\r\n\r\n\texport let mode: \"static\" | \"dynamic\";\r\n\r\n\tlet _value: null | FileData;\r\n\t$: _value = normalise_file(value, root_url ?? root);\r\n\r\n\tlet _caption: null | FileData;\r\n\t$: _caption = normalise_file(caption, root_url ?? root);\r\n\r\n\tlet dragging = false;\r\n</script>\r\n\r\n<Block\r\n\t{visible}\r\n\tvariant={mode === \"dynamic\" && value === null && source === \"upload\"\r\n\t\t? \"dashed\"\r\n\t\t: \"solid\"}\r\n\tcolor={dragging ? \"green\" : \"grey\"}\r\n\tpadding={false}\r\n\t{elem_id}\r\n\tstyle={{ height: style.height, width: style.width }}\r\n>\r\n\t<StatusTracker {...loading_status} />\r\n\r\n\t{#if mode === \"static\"}\r\n\t\t<StaticVideo value={_value} caption={_caption} {label} {show_label} />\r\n\t{:else}\r\n\t\t<Video\r\n\t\t\tvalue={_value}\r\n\t\t\tcaption={_caption}\r\n\t\t\ton:change={({ detail }) => (value = detail)}\r\n\t\t\ton:drag={({ detail }) => (dragging = detail)}\r\n\t\t\ton:error={({ detail }) => {\r\n\t\t\t\tloading_status = loading_status || {};\r\n\t\t\t\tloading_status.status = \"error\";\r\n\t\t\t\tloading_status.message = detail;\r\n\t\t\t}}\r\n\t\t\t{label}\r\n\t\t\t{show_label}\r\n\t\t\t{source}\r\n\t\t\tdrop_text={$_(\"interface.drop_video\")}\r\n\t\t\tor_text={$_(\"or\")}\r\n\t\t\tupload_text={$_(\"interface.click_to_upload\")}\r\n\t\t\t{mirror_webcam}\r\n\t\t\t{include_audio}\r\n\t\t\ton:change\r\n\t\t\ton:clear\r\n\t\t\ton:play\r\n\t\t\ton:pause\r\n\t\t\ton:upload\r\n\t\t/>\r\n\t{/if}\r\n</Block>\r\n","export { default as Component } from \"./Video.svelte\";\r\nexport const modes = [\"static\", \"dynamic\"];\r\n\r\nexport const document = (config: Record<string, any>) => ({\r\n\ttype: \"{ name: string; data: string }\",\r\n\tdescription: \"file name and base64 data of video file\"\r\n});\r\n"],"names":[],"mappings":"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"}