{"version":3,"file":"index.7095d54b.js","sources":["../../../../ui/packages/app/src/components/Interpretation/utils.ts","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Number.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Dropdown.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Checkbox.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/CheckboxGroup.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Slider.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Radio.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Image.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Audio.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Textbox.svelte","../../../../ui/packages/app/src/components/Interpretation/directory.ts","../../../../ui/packages/app/src/components/Interpretation/Interpretation.svelte","../../../../ui/packages/app/src/components/Interpretation/index.ts"],"sourcesContent":["export const getSaliencyColor = (value: number): string => {\r\n\tvar color: [number, number, number] | null = null;\r\n\tif (value < 0) {\r\n\t\tcolor = [52, 152, 219];\r\n\t} else {\r\n\t\tcolor = [231, 76, 60];\r\n\t}\r\n\treturn colorToString(interpolate(Math.abs(value), [255, 255, 255], color));\r\n};\r\n\r\nconst interpolate = (\r\n\tval: number,\r\n\trgb1: [number, number, number],\r\n\trgb2: [number, number, number]\r\n): [number, number, number] => {\r\n\tif (val > 1) {\r\n\t\tval = 1;\r\n\t}\r\n\tval = Math.sqrt(val);\r\n\tvar rgb: [number, number, number] = [0, 0, 0];\r\n\tvar i;\r\n\tfor (i = 0; i < 3; i++) {\r\n\t\trgb[i] = Math.round(rgb1[i] * (1.0 - val) + rgb2[i] * val);\r\n\t}\r\n\treturn rgb;\r\n};\r\n\r\nconst colorToString = (rgb: [number, number, number]): string => {\r\n\treturn \"rgb(\" + rgb[0] + \", \" + rgb[1] + \", \" + rgb[2] + \")\";\r\n};\r\n\r\nexport const getObjectFitSize = (\r\n\tcontains: boolean /* true = contain, false = cover */,\r\n\tcontainerWidth: number,\r\n\tcontainerHeight: number,\r\n\twidth: number,\r\n\theight: number\r\n) => {\r\n\tvar doRatio = width / height;\r\n\tvar cRatio = containerWidth / containerHeight;\r\n\tvar targetWidth = 0;\r\n\tvar targetHeight = 0;\r\n\tvar test = contains ? doRatio > cRatio : doRatio < cRatio;\r\n\r\n\tif (test) {\r\n\t\ttargetWidth = containerWidth;\r\n\t\ttargetHeight = targetWidth / doRatio;\r\n\t} else {\r\n\t\ttargetHeight = containerHeight;\r\n\t\ttargetWidth = targetHeight * doRatio;\r\n\t}\r\n\r\n\treturn {\r\n\t\twidth: targetWidth,\r\n\t\theight: targetHeight,\r\n\t\tx: (containerWidth - targetWidth) / 2,\r\n\t\ty: (containerHeight - targetHeight) / 2\r\n\t};\r\n};\r\n","<script lang=\"ts\">\r\n\timport { getSaliencyColor } from \"../utils\";\r\n\timport { BlockTitle } from \"@gradio/atoms\";\r\n\r\n\texport let interpretation: Array<[number, number]>;\r\n\texport let label: string = \"\";\r\n</script>\r\n\r\n<div class=\"input-number\">\r\n\t<BlockTitle>{label}</BlockTitle>\r\n\t<div class=\"interpret_range flex\">\r\n\t\t{#each interpretation as interpret_value}\r\n\t\t\t<div\r\n\t\t\t\tclass=\"flex-1\"\r\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpret_value[1])}\r\n\t\t\t>\r\n\t\t\t\t{interpret_value[0]}\r\n\t\t\t</div>\r\n\t\t{/each}\r\n\t</div>\r\n</div>\r\n\r\n<style lang=\"postcss\" global>\r\n\tinput::-webkit-outer-spin-button,\r\n\tinput::-webkit-inner-spin-button {\r\n\t\t-webkit-appearance: none;\r\n\t\tmargin: 0;\r\n\t}\r\n\tinput {\r\n\t\t-moz-appearance: textfield;\r\n\t}\r\n\t.input-number {\r\n\t\t@apply shadow transition hover:shadow-md dark:bg-gray-800;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { getSaliencyColor } from \"../utils\";\r\n\timport { BlockTitle } from \"@gradio/atoms\";\r\n\r\n\texport let interpretation: Array<number>;\r\n\texport let choices: Array<string>;\r\n\texport let label: string = \"\";\r\n</script>\r\n\r\n<div class=\"input-dropdown\">\r\n\t<BlockTitle>{label}</BlockTitle>\r\n\t<ul class=\"dropdown-menu\">\r\n\t\t{#each choices as choice, i}\r\n\t\t\t<li\r\n\t\t\t\tclass=\"dropdown-item first:rounded-t transition last:rounded-b py-2 px-3 block whitespace-nowrap cursor-pointer\"\r\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[i])}\r\n\t\t\t>\r\n\t\t\t\t{choice}\r\n\t\t\t</li>\r\n\t\t{/each}\r\n\t</ul>\r\n</div>\r\n\r\n<style lang=\"postcss\" global>\r\n\t.input-dropdown {\r\n\t\t.selector {\r\n\t\t\t@apply bg-white dark:bg-gray-800 shadow transition hover:shadow-md;\r\n\t\t}\r\n\t\t.dropdown-menu {\r\n\t\t\t@apply shadow;\r\n\t\t}\r\n\t\t.dropdown-item {\r\n\t\t\t@apply bg-white dark:bg-gray-800 hover:font-semibold;\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { getSaliencyColor } from \"../utils\";\r\n\timport { BlockTitle } from \"@gradio/atoms\";\r\n\r\n\texport let label: string = \"\";\r\n\texport let original: boolean;\r\n\texport let interpretation: [number, number];\r\n</script>\r\n\r\n<div class=\"input-checkbox inline-block\">\r\n\t<BlockTitle>{label}</BlockTitle>\r\n\t<button\r\n\t\tclass=\"checkbox-item py-2 px-3 rounded cursor-pointer flex gap-1\"\r\n\t\tclass:selected={original}\r\n\t>\r\n\t\t<div\r\n\t\t\tclass=\"checkbox w-4 h-4 bg-white flex items-center justify-center border border-gray-400 box-border\"\r\n\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[0])}\r\n\t\t/>\r\n\t\t<div\r\n\t\t\tclass=\"checkbox w-4 h-4 bg-white flex items-center justify-center border border-gray-400 box-border\"\r\n\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[1])}\r\n\t\t>\r\n\t\t\t<svg class=\"check h-3 w-4\" viewBox=\"-10 -10 20 20\">\r\n\t\t\t\t<line\r\n\t\t\t\t\tx1=\"-7.5\"\r\n\t\t\t\t\ty1=\"0\"\r\n\t\t\t\t\tx2=\"-2.5\"\r\n\t\t\t\t\ty2=\"5\"\r\n\t\t\t\t\tstroke=\"black\"\r\n\t\t\t\t\tstroke-width=\"4\"\r\n\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t\t<line\r\n\t\t\t\t\tx1=\"-2.5\"\r\n\t\t\t\t\ty1=\"5\"\r\n\t\t\t\t\tx2=\"7.5\"\r\n\t\t\t\t\ty2=\"-7.5\"\r\n\t\t\t\t\tstroke=\"black\"\r\n\t\t\t\t\tstroke-width=\"4\"\r\n\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t</button>\r\n</div>\r\n\r\n<style lang=\"postcss\">\r\n\t.selected .check {\r\n\t\t@apply opacity-100;\r\n\t}\r\n\t.input-checkbox {\r\n\t\t.checkbox-item {\r\n\t\t\t@apply bg-white dark:bg-gray-800 shadow transition hover:shadow-md;\r\n\t\t}\r\n\t\t.checkbox-item.selected {\r\n\t\t\t@apply bg-amber-500 dark:bg-red-600 text-white;\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { getSaliencyColor } from \"../utils\";\r\n\timport { BlockTitle } from \"@gradio/atoms\";\r\n\r\n\texport let original: Array<string>;\r\n\texport let interpretation: Array<[number, number]>;\r\n\texport let choices: Array<string>;\r\n\texport let label: string = \"\";\r\n</script>\r\n\r\n<div class=\"input-checkbox-group flex flex-wrap gap-2\">\r\n\t<BlockTitle>{label}</BlockTitle>\r\n\t{#each choices as choice, i}\r\n\t\t<button\r\n\t\t\tclass=\"checkbox-item py-2 px-3 font-semibold rounded cursor-pointer flex items-center gap-1\"\r\n\t\t\tclass:selected={original.includes(choice)}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"checkbox w-4 h-4 bg-white flex items-center justify-center border border-gray-400 box-border\"\r\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[i][0])}\r\n\t\t\t/>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"checkbox w-4 h-4 bg-white flex items-center justify-center border border-gray-400 box-border\"\r\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[i][1])}\r\n\t\t\t>\r\n\t\t\t\t<svg class=\"check h-3 w-4\" viewBox=\"-10 -10 20 20\">\r\n\t\t\t\t\t<line\r\n\t\t\t\t\t\tx1=\"-7.5\"\r\n\t\t\t\t\t\ty1=\"0\"\r\n\t\t\t\t\t\tx2=\"-2.5\"\r\n\t\t\t\t\t\ty2=\"5\"\r\n\t\t\t\t\t\tstroke=\"black\"\r\n\t\t\t\t\t\tstroke-width=\"4\"\r\n\t\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<line\r\n\t\t\t\t\t\tx1=\"-2.5\"\r\n\t\t\t\t\t\ty1=\"5\"\r\n\t\t\t\t\t\tx2=\"7.5\"\r\n\t\t\t\t\t\ty2=\"-7.5\"\r\n\t\t\t\t\t\tstroke=\"black\"\r\n\t\t\t\t\t\tstroke-width=\"4\"\r\n\t\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t\t{choice}\r\n\t\t</button>\r\n\t{/each}\r\n</div>\r\n\r\n<style lang=\"postcss\">\r\n\t.selected .check {\r\n\t\t@apply opacity-100;\r\n\t}\r\n\t.input-checkbox-group {\r\n\t\t.checkbox-item {\r\n\t\t\t@apply bg-white dark:bg-gray-800 shadow transition hover:shadow-md;\r\n\t\t}\r\n\t\t.checkbox {\r\n\t\t\t@apply bg-gray-100 dark:bg-gray-400 transition;\r\n\t\t}\r\n\t\t.checkbox-item.selected {\r\n\t\t\t@apply bg-amber-500 dark:bg-red-600 text-white;\r\n\t\t}\r\n\t\t.selected .checkbox {\r\n\t\t\t@apply bg-amber-600 dark:bg-red-700;\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { getSaliencyColor } from \"../utils\";\r\n\timport { BlockTitle } from \"@gradio/atoms\";\r\n\r\n\texport let original: number;\r\n\texport let interpretation: Array<number>;\r\n\texport let minimum: number;\r\n\texport let maximum: number;\r\n\texport let step: number;\r\n\texport let label: string = \"\";\r\n</script>\r\n\r\n<div class=\"input-slider text-center\">\r\n\t<BlockTitle>{label}</BlockTitle>\r\n\t<input\r\n\t\ttype=\"range\"\r\n\t\tclass=\"range w-full appearance-none transition rounded h-4 bg-blue-400\"\r\n\t\tdisabled\r\n\t\tmin={minimum}\r\n\t\tmax={maximum}\r\n\t\t{step}\r\n\t/>\r\n\t<div class=\"interpret_range flex\">\r\n\t\t{#each interpretation as interpret_value}\r\n\t\t\t<div\r\n\t\t\t\tclass=\"flex-1 h-4\"\r\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpret_value)}\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t</div>\r\n\t<div class=\"original inline-block mx-auto mt-1 px-2 py-0.5 rounded\">\r\n\t\t{original}\r\n\t</div>\r\n</div>\r\n\r\n<style lang=\"postcss\">\r\n\t.range::-webkit-slider-thumb {\r\n\t\t-webkit-appearance: none;\r\n\t\t@apply appearance-none w-5 h-5 rounded cursor-pointer;\r\n\t}\r\n\t.range::-moz-range-thumb {\r\n\t\t@apply appearance-none w-5 h-5 rounded cursor-pointer;\r\n\t}\r\n\r\n\t.input-slider {\r\n\t\t.range {\r\n\t\t\t@apply bg-white dark:bg-gray-800 shadow h-3 transition hover:shadow-md;\r\n\t\t}\r\n\t\t.range::-webkit-slider-thumb {\r\n\t\t\t@apply bg-gradient-to-b from-amber-400 to-amber-500 dark:from-red-500 dark:to-red-600 shadow;\r\n\t\t}\r\n\t\t.range::-moz-range-thumb {\r\n\t\t\t@apply bg-gradient-to-b from-amber-400 to-amber-500 shadow;\r\n\t\t}\r\n\t\t.value {\r\n\t\t\t@apply bg-gray-100 dark:bg-gray-600 font-semibold;\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { getSaliencyColor } from \"../utils\";\r\n\timport { BlockTitle } from \"@gradio/atoms\";\r\n\r\n\texport let original: string;\r\n\texport let interpretation: Array<number>;\r\n\texport let choices: Array<string>;\r\n\texport let label: string = \"\";\r\n</script>\r\n\r\n<div class=\"input-radio flex flex-wrap gap-2\">\r\n\t<BlockTitle>{label}</BlockTitle>\r\n\t{#each choices as choice, i}\r\n\t\t<button\r\n\t\t\tclass=\"radio-item py-2 px-3 font-semibold rounded cursor-pointer flex items-center gap-2\"\r\n\t\t\tclass:selected={original === choice}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"radio-circle w-4 h-4 rounded-full box-border\"\r\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[i])}\r\n\t\t\t/>\r\n\t\t\t{choice}\r\n\t\t</button>\r\n\t{/each}\r\n</div>\r\n\r\n<style lang=\"postcss\">\r\n\t.input-radio {\r\n\t\t.radio-item {\r\n\t\t\t@apply bg-white dark:bg-gray-800 shadow transition hover:shadow-md;\r\n\t\t}\r\n\t\t.radio-circle {\r\n\t\t\t@apply w-4 h-4  rounded-full box-border;\r\n\t\t}\r\n\t\t.radio-item.selected {\r\n\t\t\t@apply bg-amber-500 dark:bg-red-600 text-white shadow;\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { getSaliencyColor, getObjectFitSize } from \"../utils\";\r\n\timport { afterUpdate } from \"svelte\";\r\n\timport { BlockTitle } from \"@gradio/atoms\";\r\n\r\n\texport let original: string;\r\n\texport let interpretation: Array<Array<number>>;\r\n\texport let shape: undefined | [number, number];\r\n\texport let label: string = \"\";\r\n\r\n\tlet saliency_layer: HTMLCanvasElement;\r\n\tlet image: HTMLImageElement;\r\n\r\n\tconst paintSaliency = (\r\n\t\tdata: Array<Array<number>>,\r\n\t\tctx: CanvasRenderingContext2D,\r\n\t\twidth: number,\r\n\t\theight: number\r\n\t) => {\r\n\t\tvar cell_width = width / data[0].length;\r\n\t\tvar cell_height = height / data.length;\r\n\t\tvar r = 0;\r\n\t\tdata.forEach(function (row) {\r\n\t\t\tvar c = 0;\r\n\t\t\trow.forEach(function (cell) {\r\n\t\t\t\tctx.fillStyle = getSaliencyColor(cell);\r\n\t\t\t\tctx.fillRect(c * cell_width, r * cell_height, cell_width, cell_height);\r\n\t\t\t\tc++;\r\n\t\t\t});\r\n\t\t\tr++;\r\n\t\t});\r\n\t};\r\n\r\n\tafterUpdate(() => {\r\n\t\tlet size = getObjectFitSize(\r\n\t\t\ttrue,\r\n\t\t\timage.width,\r\n\t\t\timage.height,\r\n\t\t\timage.naturalWidth,\r\n\t\t\timage.naturalHeight\r\n\t\t);\r\n\t\tif (shape) {\r\n\t\t\tsize = getObjectFitSize(\r\n\t\t\t\ttrue,\r\n\t\t\t\tsize.width,\r\n\t\t\t\tsize.height,\r\n\t\t\t\tshape[0],\r\n\t\t\t\tshape[1]\r\n\t\t\t);\r\n\t\t}\r\n\t\tlet width = size.width;\r\n\t\tlet height = size.height;\r\n\t\tsaliency_layer.setAttribute(\"height\", `${height}`);\r\n\t\tsaliency_layer.setAttribute(\"width\", `${width}`);\r\n\t\tpaintSaliency(\r\n\t\t\tinterpretation,\r\n\t\t\tsaliency_layer.getContext(\"2d\")!,\r\n\t\t\twidth,\r\n\t\t\theight\r\n\t\t);\r\n\t});\r\n</script>\r\n\r\n<div class=\"input-image\">\r\n\t<BlockTitle>{label}</BlockTitle>\r\n\t<div\r\n\t\tclass=\"image-preview w-full h-60 flex justify-center items-center bg-gray-200 dark:bg-gray-600 relative\"\r\n\t>\r\n\t\t<!-- svelte-ignore a11y-missing-attribute -->\r\n\t\t<div\r\n\t\t\tclass=\"interpretation w-full h-full absolute top-0 left-0 flex justify-center items-center opacity-90 hover:opacity-20 transition\"\r\n\t\t>\r\n\t\t\t<canvas bind:this={saliency_layer} />\r\n\t\t</div>\r\n\t\t<!-- svelte-ignore a11y-missing-attribute -->\r\n\t\t<img\r\n\t\t\tclass=\"w-full h-full object-contain\"\r\n\t\t\tbind:this={image}\r\n\t\t\tsrc={original}\r\n\t\t/>\r\n\t</div>\r\n</div>\r\n","<script lang=\"ts\">\r\n\timport { getSaliencyColor } from \"../utils\";\r\n\timport { BlockTitle } from \"@gradio/atoms\";\r\n\texport let interpretation: Array<number>;\r\n\texport let label: string = \"\";\r\n</script>\r\n\r\n<div class=\"input-audio\">\r\n\t<BlockTitle>{label}</BlockTitle>\r\n\t<div class=\"interpret_range flex\">\r\n\t\t{#each interpretation as interpret_value}\r\n\t\t\t<div\r\n\t\t\t\tclass=\"flex-1 h-4\"\r\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpret_value)}\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t</div>\r\n</div>\r\n","<script lang=\"ts\">\r\n\timport { getSaliencyColor } from \"../utils\";\r\n\timport { BlockTitle } from \"@gradio/atoms\";\r\n\texport let label: string = \"\";\r\n\texport let interpretation: Array<[string, number]>;\r\n</script>\r\n\r\n<div class=\"input-text w-full rounded box-border p-2 break-word\">\r\n\t<BlockTitle>{label}</BlockTitle>\r\n\t{#each interpretation as [text, saliency]}\r\n\t\t<span\r\n\t\t\tclass=\"textspan p-1 bg-opacity-20 dark:bg-opacity-80\"\r\n\t\t\tstyle={\"background-color: \" + getSaliencyColor(saliency)}\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</span>\r\n\t{/each}\r\n</div>\r\n","import InterpretationNumber from \"./InterpretationComponents/Number.svelte\";\r\nimport InterpretationDropdown from \"./InterpretationComponents/Dropdown.svelte\";\r\nimport InterpretationCheckbox from \"./InterpretationComponents/Checkbox.svelte\";\r\nimport InterpretationCheckboxGroup from \"./InterpretationComponents/CheckboxGroup.svelte\";\r\nimport InterpretationSlider from \"./InterpretationComponents/Slider.svelte\";\r\nimport InterpretationRadio from \"./InterpretationComponents/Radio.svelte\";\r\nimport InterpretationImage from \"./InterpretationComponents/Image.svelte\";\r\nimport InterpretationAudio from \"./InterpretationComponents/Audio.svelte\";\r\nimport InterpretationTextbox from \"./InterpretationComponents/Textbox.svelte\";\r\n\r\nexport const component_map = {\r\n\taudio: InterpretationAudio,\r\n\tdropdown: InterpretationDropdown,\r\n\tcheckbox: InterpretationCheckbox,\r\n\tcheckboxgroup: InterpretationCheckboxGroup,\r\n\tnumber: InterpretationNumber,\r\n\tslider: InterpretationSlider,\r\n\tradio: InterpretationRadio,\r\n\timage: InterpretationImage,\r\n\ttextbox: InterpretationTextbox\r\n};\r\n","<script lang=\"ts\">\r\n\timport type { ComponentType } from \"svelte\";\r\n\timport type { SvelteComponentDev } from \"svelte/internal\";\r\n\timport { component_map } from \"./directory\";\r\n\r\n\texport let component: keyof typeof component_map;\r\n\texport let component_props: Record<string, any>;\r\n\texport let value: any;\r\n\r\n\t$: _component = component_map[component] as ComponentType<SvelteComponentDev>;\r\n</script>\r\n\r\n{#if value}\r\n\t<svelte:component\r\n\t\tthis={_component}\r\n\t\t{...component_props}\r\n\t\toriginal={value.original}\r\n\t\tinterpretation={value.interpretation}\r\n\t/>\r\n{/if}\r\n\r\n<style lang=\"postcss\" global>\r\n</style>\r\n","export { default as Component } from \"./Interpretation.svelte\";\r\nexport const modes = [\"dynamic\"];\r\n"],"names":["InterpretationAudio","InterpretationDropdown","InterpretationCheckbox","InterpretationCheckboxGroup","InterpretationNumber","InterpretationSlider","InterpretationRadio","InterpretationImage","InterpretationTextbox"],"mappings":"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"}