{"version":3,"file":"frontmatter-5e2ebfaa.js","sources":["../../../../js/code/interactive/frontmatter.ts"],"sourcesContent":["import type {\r\n\tElement,\r\n\tMarkdownExtension,\r\n\tBlockContext,\r\n\tLine\r\n} from \"@lezer/markdown\";\r\nimport { parseMixed } from \"@lezer/common\";\r\nimport { yaml } from \"@codemirror/legacy-modes/mode/yaml\";\r\nimport { foldInside, foldNodeProp, StreamLanguage } from \"@codemirror/language\";\r\nimport { styleTags, tags } from \"@lezer/highlight\";\r\n\r\nconst frontMatterFence = /^---\\s*$/m;\r\n\r\nexport const frontmatter: MarkdownExtension = {\r\n\tdefineNodes: [{ name: \"Frontmatter\", block: true }, \"FrontmatterMark\"],\r\n\tprops: [\r\n\t\tstyleTags({\r\n\t\t\tFrontmatter: [tags.documentMeta, tags.monospace],\r\n\t\t\tFrontmatterMark: tags.processingInstruction\r\n\t\t}),\r\n\t\tfoldNodeProp.add({\r\n\t\t\tFrontmatter: foldInside,\r\n\t\t\tFrontmatterMark: () => null\r\n\t\t})\r\n\t],\r\n\twrap: parseMixed((node) => {\r\n\t\tconst { parser } = StreamLanguage.define(yaml);\r\n\t\tif (node.type.name === \"Frontmatter\") {\r\n\t\t\treturn {\r\n\t\t\t\tparser,\r\n\t\t\t\toverlay: [{ from: node.from + 4, to: node.to - 4 }]\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}),\r\n\tparseBlock: [\r\n\t\t{\r\n\t\t\tname: \"Frontmatter\",\r\n\t\t\tbefore: \"HorizontalRule\",\r\n\t\t\tparse: (cx: BlockContext, line: Line): boolean => {\r\n\t\t\t\tlet end: number | undefined = undefined;\r\n\t\t\t\tconst children = new Array<Element>();\r\n\t\t\t\tif (cx.lineStart === 0 && frontMatterFence.test(line.text)) {\r\n\t\t\t\t\tchildren.push(cx.elt(\"FrontmatterMark\", 0, 4));\r\n\t\t\t\t\twhile (cx.nextLine()) {\r\n\t\t\t\t\t\tif (frontMatterFence.test(line.text)) {\r\n\t\t\t\t\t\t\tend = cx.lineStart + 4;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (end !== undefined) {\r\n\t\t\t\t\t\tchildren.push(cx.elt(\"FrontmatterMark\", end - 4, end));\r\n\t\t\t\t\t\tcx.addElement(cx.elt(\"Frontmatter\", 0, end, children));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n};\r\n"],"names":["frontMatterFence","frontmatter","styleTags","tags","foldNodeProp","foldInside","parseMixed","node","parser","StreamLanguage","yaml","cx","line","end","children"],"mappings":"+XAWA,MAAMA,EAAmB,YAEZC,EAAiC,CAC7C,YAAa,CAAC,CAAE,KAAM,cAAe,MAAO,IAAQ,iBAAiB,EACrE,MAAO,CACNC,EAAU,CACT,YAAa,CAACC,EAAK,aAAcA,EAAK,SAAS,EAC/C,gBAAiBA,EAAK,qBAAA,CACtB,EACDC,EAAa,IAAI,CAChB,YAAaC,EACb,gBAAiB,IAAM,IAAA,CACvB,CACF,EACA,KAAMC,EAAYC,GAAS,CAC1B,KAAM,CAAE,OAAAC,CAAW,EAAAC,EAAe,OAAOC,CAAI,EACzC,OAAAH,EAAK,KAAK,OAAS,cACf,CACN,OAAAC,EACA,QAAS,CAAC,CAAE,KAAMD,EAAK,KAAO,EAAG,GAAIA,EAAK,GAAK,EAAG,CAAA,EAG5C,IACR,CACA,EACD,WAAY,CACX,CACC,KAAM,cACN,OAAQ,iBACR,MAAO,CAACI,EAAkBC,IAAwB,CACjD,IAAIC,EACE,MAAAC,EAAW,IAAI,MACrB,GAAIH,EAAG,YAAc,GAAKX,EAAiB,KAAKY,EAAK,IAAI,EAAG,CAEpD,IADPE,EAAS,KAAKH,EAAG,IAAI,kBAAmB,EAAG,CAAC,CAAC,EACtCA,EAAG,YACT,GAAIX,EAAiB,KAAKY,EAAK,IAAI,EAAG,CACrCC,EAAMF,EAAG,UAAY,EACrB,MAGF,OAAIE,IAAQ,SACXC,EAAS,KAAKH,EAAG,IAAI,kBAAmBE,EAAM,EAAGA,CAAG,CAAC,EACrDF,EAAG,WAAWA,EAAG,IAAI,cAAe,EAAGE,EAAKC,CAAQ,CAAC,GAE/C,OAEA,OAAA,EAET,CACD,CACD,CACD"}