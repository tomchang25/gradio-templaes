{"version":3,"file":"index-53c5009d.js","sources":["../../../../js/form/src/Checkbox.svelte","../../../../js/app/src/components/Checkbox/Checkbox.svelte","../../../../js/app/src/components/Checkbox/index.ts"],"sourcesContent":["<script lang=\"ts\">\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\timport type { SelectData } from \"@gradio/utils\";\r\n\r\n\texport let value: boolean;\r\n\texport let disabled: boolean = false;\r\n\texport let label: string;\r\n\r\n\tconst dispatch = createEventDispatcher<{\r\n\t\tchange: boolean;\r\n\t\tselect: SelectData;\r\n\t}>();\r\n\r\n\tfunction handle_change(value: boolean) {\r\n\t\tdispatch(\"change\", value);\r\n\t}\r\n\r\n\t$: handle_change(value);\r\n</script>\r\n\r\n<!-- svelte-ignore a11y-label-has-associated-control -->\r\n<label class:disabled>\r\n\t<input\r\n\t\tbind:checked={value}\r\n\t\ton:input={(evt) => {\r\n\t\t\tvalue = evt.currentTarget.checked;\r\n\t\t\tdispatch(\"select\", {\r\n\t\t\t\tindex: 0,\r\n\t\t\t\tvalue: label,\r\n\t\t\t\tselected: evt.currentTarget.checked\r\n\t\t\t});\r\n\t\t}}\r\n\t\t{disabled}\r\n\t\ttype=\"checkbox\"\r\n\t\tname=\"test\"\r\n\t\tdata-testid=\"checkbox\"\r\n\t/>\r\n\t<span class=\"ml-2\">{label}</span>\r\n</label>\r\n\r\n<style>\r\n\tlabel {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tcursor: pointer;\r\n\t\tcolor: var(--body-text-color);\r\n\t\tfont-weight: var(--checkbox-label-text-weight);\r\n\t\tfont-size: var(--checkbox-label-text-size);\r\n\t\tline-height: var(--line-md);\r\n\t}\r\n\r\n\tlabel > * + * {\r\n\t\tmargin-left: var(--size-2);\r\n\t}\r\n\r\n\tinput {\r\n\t\t--ring-color: transparent;\r\n\t\tposition: relative;\r\n\t\tbox-shadow: var(--input-shadow);\r\n\t\tborder: 1px solid var(--checkbox-border-color);\r\n\t\tborder-radius: var(--checkbox-border-radius);\r\n\t\tbackground-color: var(--checkbox-background-color);\r\n\t\tline-height: var(--line-sm);\r\n\t}\r\n\r\n\tinput:checked,\r\n\tinput:checked:hover,\r\n\tinput:checked:focus {\r\n\t\tborder-color: var(--checkbox-border-color-selected);\r\n\t\tbackground-image: var(--checkbox-check);\r\n\t\tbackground-color: var(--checkbox-background-color-selected);\r\n\t}\r\n\r\n\tinput:hover {\r\n\t\tborder-color: var(--checkbox-border-color-hover);\r\n\t\tbackground-color: var(--checkbox-background-color-hover);\r\n\t}\r\n\r\n\tinput:focus {\r\n\t\tborder-color: var(--checkbox-border-color-focus);\r\n\t\tbackground-color: var(--checkbox-background-color-focus);\r\n\t}\r\n\r\n\tinput[disabled],\r\n\t.disabled {\r\n\t\tcursor: not-allowed;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { Checkbox } from \"@gradio/form\";\r\n\timport { Block, Info } from \"@gradio/atoms\";\r\n\timport StatusTracker from \"../StatusTracker/StatusTracker.svelte\";\r\n\timport type { LoadingStatus } from \"../StatusTracker/types\";\r\n\timport type { Styles } from \"@gradio/utils\";\r\n\r\n\texport let elem_id: string = \"\";\r\n\texport let elem_classes: Array<string> = [];\r\n\texport let visible: boolean = true;\r\n\texport let value: boolean = false;\r\n\texport let label: string = \"Checkbox\";\r\n\texport let info: string | undefined = undefined;\r\n\texport let mode: \"static\" | \"dynamic\";\r\n\texport let style: Styles = {};\r\n\texport let loading_status: LoadingStatus;\r\n</script>\r\n\r\n<Block\r\n\t{visible}\r\n\t{elem_id}\r\n\t{elem_classes}\r\n\tdisable={typeof style.container === \"boolean\" && !style.container}\r\n>\r\n\t<StatusTracker {...loading_status} />\r\n\r\n\t{#if info}\r\n\t\t<Info>{info}</Info>\r\n\t{/if}\r\n\t<Checkbox\r\n\t\t{label}\r\n\t\tbind:value\r\n\t\ton:change\r\n\t\ton:select\r\n\t\tdisabled={mode === \"static\"}\r\n\t/>\r\n</Block>\r\n","export { default as Component } from \"./Checkbox.svelte\";\r\nexport const modes = [\"static\", \"dynamic\"];\r\n\r\nexport const document = (config: Record<string, any>) => ({\r\n\ttype: {\r\n\t\tpayload: \"boolean\"\r\n\t},\r\n\tdescription: {\r\n\t\tpayload: \"checked status\"\r\n\t},\r\n\texample_data: config.value\r\n});\r\n"],"names":["ctx","insert","target","label_1","anchor","append","input","span","value","$$props","disabled","label","dispatch","createEventDispatcher","handle_change","evt","$$invalidate","create_if_block","dirty","checkbox_changes","block_changes","elem_id","elem_classes","visible","info","mode","style","loading_status","modes","document","config"],"mappings":"wiBAqCqBA,EAAK,CAAA,CAAA,sNAhB1BC,EAiBQC,EAAAC,EAAAC,CAAA,EAhBPC,EAcEF,EAAAG,CAAA,YAbaN,EAAK,CAAA,SAcpBK,EAAiCF,EAAAI,CAAA,6GAdlBP,EAAK,CAAA,YAcAA,EAAK,CAAA,CAAA,oFAjCd,MAAAQ,CAAc,EAAAC,EACd,CAAA,SAAAC,EAAoB,EAAK,EAAAD,GACzB,MAAAE,CAAa,EAAAF,EAElB,MAAAG,EAAWC,IAKR,SAAAC,EAAcN,EAAc,CACpCI,EAAS,SAAUJ,CAAK,eASVA,EAAK,KAAA,uBACRO,GAAG,CACbC,EAAA,EAAAR,EAAQO,EAAI,cAAc,OAAO,EACjCH,EAAS,SAAQ,CAChB,MAAO,EACP,MAAOD,EACP,SAAUI,EAAI,cAAc,wJAZ5BD,EAAcN,CAAK,8ZCUdR,EAAI,CAAA,CAAA,qCAAJA,EAAI,CAAA,CAAA,0DAHOA,EAAc,CAAA,CAAA,4EAE5BA,EAAI,CAAA,GAAAiB,EAAAjB,CAAA,0CAQE,SAAAA,OAAS,+RAVDA,EAAc,CAAA,CAAA,CAAA,CAAA,eAE5BA,EAAI,CAAA,yIAQEkB,EAAA,KAAAC,EAAA,SAAAnB,OAAS,wTAZJ,QAAA,OAAAA,KAAM,WAAc,WAAc,CAAAA,KAAM,4LAAxCkB,EAAA,MAAAE,EAAA,QAAA,OAAApB,KAAM,WAAc,WAAc,CAAAA,KAAM,4JAf7C,GAAA,CAAA,QAAAqB,EAAkB,EAAE,EAAAZ,GACpB,aAAAa,EAAY,EAAA,EAAAb,EACZ,CAAA,QAAAc,EAAmB,EAAI,EAAAd,EACvB,CAAA,MAAAD,EAAiB,EAAK,EAAAC,EACtB,CAAA,MAAAE,EAAgB,UAAU,EAAAF,EAC1B,CAAA,KAAAe,EAA2B,MAAS,EAAAf,GACpC,KAAAgB,CAA0B,EAAAhB,GAC1B,MAAAiB,EAAK,EAAA,EAAAjB,GACL,eAAAkB,CAA6B,EAAAlB,4kBCd5BmB,GAAQ,CAAC,SAAU,SAAS,EAE5BC,GAAYC,IAAiC,CACzD,KAAM,CACL,QAAS,SACV,EACA,YAAa,CACZ,QAAS,gBACV,EACA,aAAcA,EAAO,KACtB"}