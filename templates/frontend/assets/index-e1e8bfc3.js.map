{"version":3,"file":"index-e1e8bfc3.js","sources":["../../../../js/upload-button/src/UploadButton.svelte","../../../../js/app/src/components/UploadButton/UploadButton.svelte","../../../../js/app/src/components/UploadButton/index.ts"],"sourcesContent":["<script lang=\"ts\">\r\n\timport { Button } from \"@gradio/button\";\r\n\timport type { Styles } from \"@gradio/utils\";\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\timport type { FileData } from \"@gradio/upload\";\r\n\r\n\texport let style: Styles = {};\r\n\texport let elem_id: string = \"\";\r\n\texport let elem_classes: Array<string> = [];\r\n\texport let visible: boolean = true;\r\n\texport let size: \"sm\" | \"lg\" = style.size || \"lg\";\r\n\texport let file_count: string;\r\n\texport let file_types: Array<string> = [\"file\"];\r\n\texport let include_file_metadata = true;\r\n\r\n\tlet hidden_upload: HTMLInputElement;\r\n\tconst dispatch = createEventDispatcher();\r\n\tlet accept_file_types: string | null;\r\n\tif (file_types == null) {\r\n\t\taccept_file_types = null;\r\n\t} else {\r\n\t\tfile_types = file_types.map((x) => {\r\n\t\t\tif (x.startsWith(\".\")) {\r\n\t\t\t\treturn x;\r\n\t\t\t} else {\r\n\t\t\t\treturn x + \"/*\";\r\n\t\t\t}\r\n\t\t});\r\n\t\taccept_file_types = file_types.join(\", \");\r\n\t}\r\n\r\n\tconst openFileUpload = () => {\r\n\t\thidden_upload.click();\r\n\t};\r\n\r\n\tconst loadFiles = (files: FileList) => {\r\n\t\tlet _files: Array<File> = Array.from(files);\r\n\t\tif (!files.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (file_count === \"single\") {\r\n\t\t\t_files = [files[0]];\r\n\t\t}\r\n\t\tvar all_file_data: Array<FileData | File> = [];\r\n\t\t_files.forEach((f, i) => {\r\n\t\t\tall_file_data[i] = include_file_metadata\r\n\t\t\t\t? {\r\n\t\t\t\t\t\tname: f.name,\r\n\t\t\t\t\t\tsize: f.size,\r\n\t\t\t\t\t\tdata: \"\",\r\n\t\t\t\t\t\tblob: f\r\n\t\t\t\t  }\r\n\t\t\t\t: f;\r\n\t\t\tif (\r\n\t\t\t\tall_file_data.filter((x) => x !== undefined).length === files.length\r\n\t\t\t) {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\t\"load\",\r\n\t\t\t\t\tfile_count == \"single\" ? all_file_data[0] : all_file_data\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadFilesFromUpload = (e: Event) => {\r\n\t\tconst target = e.target as HTMLInputElement;\r\n\r\n\t\tif (!target.files) return;\r\n\t\tloadFiles(target.files);\r\n\t};\r\n</script>\r\n\r\n<input\r\n\tclass=\"hide\"\r\n\taccept={accept_file_types}\r\n\ttype=\"file\"\r\n\tbind:this={hidden_upload}\r\n\ton:change={loadFilesFromUpload}\r\n\tmultiple={file_count === \"multiple\" || undefined}\r\n\twebkitdirectory={file_count === \"directory\" || undefined}\r\n\tmozdirectory={file_count === \"directory\" || undefined}\r\n/>\r\n\r\n<Button\r\n\t{size}\r\n\tvariant=\"secondary\"\r\n\t{elem_id}\r\n\t{elem_classes}\r\n\t{visible}\r\n\ton:click={openFileUpload}\r\n\t{style}\r\n>\r\n\t<slot />\r\n</Button>\r\n\r\n<style>\r\n\t.hide {\r\n\t\tdisplay: none;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { createEventDispatcher, tick } from \"svelte\";\r\n\timport type { Styles } from \"@gradio/utils\";\r\n\timport type { FileData } from \"@gradio/upload\";\r\n\timport { UploadButton } from \"@gradio/upload-button\";\r\n\timport { upload_files } from \"@gradio/client\";\r\n\timport { blobToBase64 } from \"@gradio/upload\";\r\n\timport { _ } from \"svelte-i18n\";\r\n\r\n\texport let style: Styles = {};\r\n\texport let elem_id: string = \"\";\r\n\texport let elem_classes: Array<string> = [];\r\n\texport let visible: boolean = true;\r\n\texport let label: string;\r\n\texport let value: null | FileData;\r\n\texport let file_count: string;\r\n\texport let file_types: Array<string> = [\"file\"];\r\n\texport let root: string;\r\n\r\n\tasync function handle_upload({ detail }: CustomEvent<FileData>) {\r\n\t\tvalue = detail;\r\n\t\tawait tick();\r\n\t\tlet files = (Array.isArray(detail) ? detail : [detail]).map(\r\n\t\t\t(file_data) => file_data.blob!\r\n\t\t);\r\n\r\n\t\tupload_files(root, files).then(async (response) => {\r\n\t\t\tif (response.error) {\r\n\t\t\t\t(Array.isArray(detail) ? detail : [detail]).forEach(\r\n\t\t\t\t\tasync (file_data, i) => {\r\n\t\t\t\t\t\tfile_data.data = await blobToBase64(file_data.blob!);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t(Array.isArray(detail) ? detail : [detail]).forEach((file_data, i) => {\r\n\t\t\t\t\tif (response.files) {\r\n\t\t\t\t\t\tfile_data.orig_name = file_data.name;\r\n\t\t\t\t\t\tfile_data.name = response.files[i];\r\n\t\t\t\t\t\tfile_data.is_file = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(\"change\", value);\r\n\t\t\tdispatch(\"upload\", detail);\r\n\t\t});\r\n\t}\r\n\r\n\tconst dispatch = createEventDispatcher<{\r\n\t\tchange: FileData | null;\r\n\t\tupload: FileData;\r\n\t}>();\r\n</script>\r\n\r\n<UploadButton\r\n\t{elem_id}\r\n\t{elem_classes}\r\n\t{style}\r\n\t{visible}\r\n\t{file_count}\r\n\t{file_types}\r\n\ton:click\r\n\ton:load={handle_upload}\r\n>\r\n\t{$_(label)}\r\n</UploadButton>\r\n","export { default as Component } from \"./UploadButton.svelte\";\r\nexport const modes = [\"static\"];\r\n"],"names":["ctx","insert","target","input","anchor","style","$$props","elem_id","elem_classes","visible","size","file_count","file_types","include_file_metadata","hidden_upload","dispatch","createEventDispatcher","accept_file_types","x","openFileUpload","loadFiles","files","_files","all_file_data","f","i","loadFilesFromUpload","e","$$value","t_value","dirty","set_data","label","value","root","handle_upload","detail","$$invalidate","tick","file_data","upload_files","response","blobToBase64","modes"],"mappings":"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"}